!function(){"use strict";angular.module("dropdown-multiselect",[]).directive("dropdownMultiselect",["$timeout",function(e){return{restrict:"AE",replace:!0,transclude:!0,templateUrl:"assets/dropdown.html",scope:{config:"=dropdownConfig",primaryKey:"@dropdownTrackby",disableDropdown:"=dropdownDisable",dropdownType:"=",model:"=?",dropdownOptions:"=dropdownOptions",notifyParent:"&dropdownSelected"},controller:["$scope",function(n){function o(){!n.preSelectAll&&n.preSelectItem&&e(n.preSelect)}function t(){n.preSelectAll&&n.multiSelect&&e(n.selectAll)}function l(){var e=[];for(var o in n.options[0])e.push(o);n.leftKey=e[0],n.rightKey=e[1]}function r(e){if(angular.isUndefined(e)&&(e=n.options[0].hasOwnProperty("Id")?"Id":!!n.options[0].hasOwnProperty("id")&&"id",n.trackByKey=e,e===!1))throw'ReferenceError: Expecting property "Id" in an object from an array binded to "dropdown-options" attribute. Consider providing "dropdown-trackby" attribute or make sure property "Id" exists in binded array\'s object.'}function i(e,o){for(var t=0;t<o.length;t++){var l=o[t][n.trackByKey];if(e===l){var r=d(o,n.trackByKey,e);return o.splice(r,1),!0}}}function d(e,n,o){for(var t=0;t<e.length;t++)if(e[t][n]===o)return t;return null}var a,s,c=[],u=!0,p=!0,g=!1,f="-",m="glyphicon glyphicon-ok",w=(n.dropdownType,n.primaryKey);n.trackByKey=w,n.isBadgeVisible=u,n.isFilterVisible=g,n.divider=f,n.multiSelect=p,n.model=c;try{if(angular.isUndefined(n.dropdownOptions)&&angular.isUndefined(n.config))throw"Error: Missing array for dropdown list. Consider providing array through [dropdown-options] or [dropdown-config] attribute in the directive tag.";angular.isDefined(n.dropdownOptions)&&(n.options=n.dropdownOptions,l()),angular.isDefined(n.config)?(n.config.hasOwnProperty("options")&&(n.options=n.config.options),n.config.hasOwnProperty("displayBy")?(n.leftKey=n.config.displayBy[0],n.rightKey=n.config.displayBy[1]):l(),n.config.hasOwnProperty("divider")&&(n.divider=n.config.divider),n.config.hasOwnProperty("icon")&&(m=n.config.icon),n.config.hasOwnProperty("filter")&&(g=n.config.filter,n.isFilterVisible=g),n.config.hasOwnProperty("displayBadge")&&(u=u=!!angular.equals(!0,n.config.displayBadge),n.isBadgeVisible=u),n.config.hasOwnProperty("multiSelect")&&(p=!!angular.equals(!0,n.config.multiSelect),n.multiSelect=p),n.config.hasOwnProperty("preSelectAll")&&(s=!!angular.equals(!0,n.config.preSelectAll),n.preSelectAll=s),n.config.hasOwnProperty("preSelectItem")&&(a=!!angular.equals(!0,n.config.preSelectItem),n.preSelectItem=a),n.config.hasOwnProperty("trackBy")?(w=n.config.trackBy,n.trackByKey=w):r(w)):r(w),n.$watch("options",function(e,o){n.disableDropdown?n.disabled=!0:n.disabled=!1,e&&(c=[],n.model=c)}),n.selectAll=function(){var e=n.options;if(angular.isUndefined(e))return!1;if(e.length===c.length)return!1;for(var o=0;o<e.length;o++){for(var t=e[o][n.trackByKey],l=(e[o].ChainId,{}),r=!1,i=0;i<c.length;i++){var d=c[i][n.trackByKey];if(t===d){r=!0;break}}r||(l[n.trackByKey]=t,c.push(e[o]))}n.notifyParent({selected:c})},n.preSelect=function(){var e=n.options;e.forEach(function(e){e.selected&&c.push(e)}),n.notifyParent({selected:c})},n.unSelectAll=function(){c=[],n.model=c,n.notifyParent({selected:c})},n.setSelectedItem=function(){var e=this.option[n.trackByKey],o=(this.option.ChainId,{});if(p===!1)return!i(e,c)&&(c[0]=this.option,!1);var t=i(e,c);t||(o[n.trackByKey]=e,this.option.selected=!0,c.push(this.option)),n.notifyParent({selected:c})},n.isChecked=function(e,o){for(var t=0;t<c.length;t++)if(c[t][n.trackByKey]===e)return m;return!1},t(),o()}catch(e){console.error(e)}}],link:function(e,n,o,t){function l(e){var n=document.getElementById("dropdownMultiselect"),o=angular.isDefined(e.srcElement)?e.srcElement.offsetParent:e.originalTarget.offsetParent;if(null!==o){for(var t,l=o;l!==n;)if(angular.element(document.querySelector("#dropdownMultiselect .dropdown-menu")),l=l.offsetParent,t=!0,null===l){t=!1;break}if(null===l)return angular.element(document.querySelector("#dropdownMultiselect .dropdown-menu")).removeClass("dropdown-show"),angular.element(document.querySelector("#dropdownMultiselect .dropdown-menu")).css("display","none"),!1;if(null===l||l===n&&!t){var r=angular.element(document.querySelector("#dropdownMultiselect .dropdown-menu"));console.log(r),"dropdown-show"===angular.element(document.querySelector("#dropdownMultiselect .dropdown-menu"))[0].classList[1]?(angular.element(document.querySelector("#dropdownMultiselect .dropdown-menu")).removeClass("dropdown-show"),angular.element(document.querySelector("#dropdownMultiselect .dropdown-menu")).css("display","none")):(angular.element(document.querySelector("#dropdownMultiselect .dropdown-menu")).addClass("dropdown-show"),angular.element(document.querySelector("#dropdownMultiselect .dropdown-menu")).css("display","block"))}}else angular.element(document.querySelector("#dropdownMultiselect .dropdown-menu")).removeClass("dropdown-show"),angular.element(document.querySelector("#dropdownMultiselect .dropdown-menu")).css("display","none")}function r(e){var n=document.getElementById("dropdownMultiselect"),o=angular.isDefined(e.srcElement)?e.srcElement.offsetParent:e.originalTarget.offsetParent;if(null!==o){for(var t,l=o;l!==n;)if(angular.element(document.querySelector("#dropdownMultiselect .dropdown-menu")),l=l.offsetParent,t=!0,null===l){t=!1;break}if(angular.isDefined(t)&&!t)return angular.element(document.querySelector("#dropdownMultiselect .dropdown-menu")).removeClass("dropdown-show"),angular.element(document.querySelector("#dropdownMultiselect .dropdown-menu")).css("display","none"),i=!1}else angular.element(document.querySelector("#dropdownMultiselect .dropdown-menu")).removeClass("dropdown-show"),angular.element(document.querySelector("#dropdownMultiselect .dropdown-menu")).css("display","none")}var i=!1;n.bind("click",function(e){var n,o=document.getElementById("dropdownMultiselect");if(n=angular.isDefined(e.originalEvent)?angular.isDefined(e.originalEvent.srcElement)?e.originalEvent.srcElement.offsetParent:e.originalEvent.originalTarget.offsetParent:angular.isDefined(e.srcElement)?e.srcElement.offsetParent:e.originalTarget.offsetParent,null!==n){for(var t,l=n;l!==o;)if(angular.element(document.querySelector("#dropdownMultiselect .dropdown-menu")),l=l.offsetParent,t=!0,null===l){t=!1;break}if(null===l)return angular.element(document.querySelector("#dropdownMultiselect .dropdown-menu")).removeClass("dropdown-show"),angular.element(document.querySelector("#dropdownMultiselect .dropdown-menu")).css("display","none"),!1;(null===l||l===o&&!t)&&(angular.element(document.querySelector("#dropdownMultiselect .dropdown-menu")),i===!0?(angular.element(document.querySelector("#dropdownMultiselect .dropdown-menu")).removeClass("dropdown-show"),angular.element(document.querySelector("#dropdownMultiselect .dropdown-menu")).css("display","none")):(angular.element(document.querySelector("#dropdownMultiselect .dropdown-menu")).addClass("dropdown-show"),angular.element(document.querySelector("#dropdownMultiselect .dropdown-menu")).css("display","block")),i=!i)}else angular.element(document.querySelector("#dropdownMultiselect .dropdown-menu")).removeClass("dropdown-show"),angular.element(document.querySelector("#dropdownMultiselect .dropdown-menu")).css("display","none")}),"ontouchstart"in window?document.addEventListener("touchstart",l,!1):document.addEventListener("mouseup",r,!1);var d=angular.element(document.querySelector(".dropdown-scrollable"));if(angular.isDefined(e.config)&&angular.isDefined(e.config.height)){var a=e.config.height;d.css("max-height",a)}else e.defaultHeight=!0;e.multiSelect===!1&&e.isFilterVisible===!0?d.css("margin-top","50px"):e.multiSelect===!1&&e.isFilterVisible===!1&&d.css("margin-top","10px");var s=n.find("span").contents();e.hasText=s.length>1}}}])}(),angular.module("templates").run(["$templateCache",function(e){e.put("dropdown.html",'<div class="dropdown" id="dropdownMultiselect">\n  <button class="btn btn-default dropdown-toggle" ng-class="{\'disabled\':disabled}" type="button" id="dropdownMenu">\n    <span class="pull-left" ng-if="!hasText">Select </span>\n    <span class="pull-left" ng-transclude></span>\n    <div class="pull-right">\n      <span class="badge" ng-if="isBadgeVisible"> {{ model.length }}</span>\n      <span class="caret"></span>\n    </div>\n  </button>\n  <ul class="dropdown-menu">\n    <li>\n      <div>\n        <ul class="dropdown-static">\n          <li ng-if="multiSelect">\n            <a ng-click="selectAll()"><i class="glyphicon glyphicon-ok"></i> Select All</a>\n          </li>\n          <li ng-if="multiSelect">\n            <a ng-click="unSelectAll()"><i class="glyphicon glyphicon-remove"></i> Unselect All</a>\n          </li>\n          <div class="filter-parent" id="search" ng-if="isFilterVisible">\n            <label for="filter-by"><i class="glyphicon glyphicon-search"></i></label>\n            <div>\n              <input placeholder="Search" id="filter-by" class="form-control" tabindex="1" ng-model="$parent.option">\n            </div>\n          </div>\n        </ul>\n      </div>\n    </li>\n    <li>\n      <ul class="dropdown-scrollable" ng-class="{\'dropdown-height\': defaultHeight, \'hasfilter\': isFilterVisible === true}">\n        <li ng-repeat="option in options | filter: option">\n          <a ng-click="setSelectedItem()">\n            <span class="pull-left option-selected-icon" ng-class="isChecked(option[trackByKey], dropdownType)">\n            </span>\n            <span class="option-content">\n              {{ option[leftKey] }} {{ divider }} {{ option[rightKey] }}</span>\n          </a>\n        </li>\n      </ul>\n    </li>\n  </ul>\n</div>\n')}]);